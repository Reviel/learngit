安装git
首先，你可以试着输入git，看看系统有没有安装Git
如果没有安装git的话有些新版本的系统会提示你安装git的代码，照做就好了
如果没有提示代码那么
如果你碰巧用Debian或Ubuntu Linux，通过一条sudo apt-get install git就可以直接完成Git的安装，非常简单。
老一点的Debian或Ubuntu Linux，要把命令改为sudo apt-get install git-core



安装完成后，还需要最后一步设置，在命令行输入：

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"



创建版本库
首先，进入一个根目录
第二步，通过git init命令把这个目录变成Git可以管理的仓库

将文件添加到git
将文件添加到暂存区 git add：
$ git add readme.txt
要添加多个文件的时候文件和文件之间用空格隔开
$ git add file2.txt file3.txt

将暂存区文件添加到分支 git commit：
$ git commit -m "这个位置写你的提交注释"

查看git工作区、暂存区的状态
git status

查看git中工作区中的文件和最近一次git add或者git commit之间的区别
git diff

查看git 中的版本信息
$ git log
或者
$ git log --pretty=oneline

回退到上一个版本
$ git reset --hard HEAD^
或者
$ git reset --hard HEAD~1
上上个版本
$ git reset --hard HEAD^^
或者
$ git reset --hard HEAD~2

在终端中查看文本的信息
$ cat readme.txt

回退到某一个版本
$ git reset --hard 3628164

记录你每一次的git 命令和相关的版本号：
$ git reflog

丢弃工作区的修改(让这个文件回到最近一次git commit或git add时的状态)：
$ git checkout -- readme.txt

把暂存区的修改撤销掉（unstage），重新放回工作区：
$ git reset HEAD readme.txt
当我们用HEAD时，表示最新的版本

真实的删除文件：
$ rm test.txt
在git中删除文件:
$ git rm test.txt

误删后恢复文件：
$ git checkout -- test.txt

在终端中编辑文件
$ vi test.txt

远程仓库配置：
用户主目录下，看看有没有.ssh目录
如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件
如果没有就创建：创建SSH Key：
$ ssh-keygen -t rsa -C "youremail@example.com"
可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。

创立远程仓库：
github上名为 Create a new repo
然后输入仓库名称其他保持默认然后创建

在终端中运行如下指令，这样可以添加一个远程仓库的数据：
git remote add origin git@github.com:Reviel/learngit.git

把代码push到远程仓库中
$ git push -u origin master
由于远程库是空的，我们第一次推送master分支时，加上了-u参数

从现在起，只要本地作了提交，就可以通过命令：
$ git push origin master

SSH警告
当你第一次使用Git的clone或者push命令连接GitHub时，会得到一个警告：
The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.
RSA key fingerprint is xx.xx.xx.xx.xx.
Are you sure you want to continue connecting (yes/no)?
这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。
Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：
Warning: Permanently added 'github.com' (RSA) to the list of known hosts.

关联一个远程库
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
或者使用git push -f origin master进行强制推送

克隆远程库
远程仓库建立之后，如果使用readme.md文件初始化该项目之后，或者要下载别人的项目之后需要用$ git clone git@github.com:Reviel/gitskill.git这样的指令来将项目下载，它会自动建一个文件夹

分支管理的概念
你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。

创建分支和管理分支
创建dev分支，然后切换到dev分支：
$ git checkout -b dev

git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：
$ git branch dev
$ git checkout dev

用git branch命令查看当前分支：
$ git branch


